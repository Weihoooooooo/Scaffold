server:
  port: 8888
# Actuator 监控
management:
  endpoints:
    web:
      exposure:
        include:
          - "*"
spring:
  application:
    name: Scaffold
  mvc:
    servlet:
      load-on-startup: 1 # 取消 DispatcherServlet 懒加载 ，加快重启后接口调用的速度
    pathmatch:
      matching-strategy: ant_path_matcher # 防止Spring Boot 2.7.X 与 SpringFox路径匹配不一致报错
  cache:
    type: redis
  freemarker:
    check-template-location: false
  messages:
    basename: i18n/messages # 国际化的资源文件相对路径
    encoding: UTF-8
    fallback-to-system-locale: true # 如果该属性为 true，则会默认查找当前系统对应的资源文件，否则就返回 null，返回 null 之后，最终又会调用到系统默认的 messages.properties 文件
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      db-type: com.alibaba.druid.pool.DruidDataSource
      driverClassName: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://192.168.137.128:3306/scaffold?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&allowMultiQueries=true
      username: root
      password: 970049938
      # 初始连接数
      initial-size: 5
      # 最小连接数
      min-idle: 15
      # 最大连接数
      max-active: 30
      # 超时时间(以秒数为单位)
      remove-abandoned-timeout: 180
      # 获取连接超时时间
      max-wait: 3000
      # 连接有效性检测时间
      time-between-eviction-runs-millis: 60000
      # 连接在池中最小生存的时间
      min-evictable-idle-time-millis: 300000
      # 连接在池中最大生存的时间
      max-evictable-idle-time-millis: 900000
      # 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除
      test-while-idle: true
      # 指明是否在从池中取出连接前进行检验,如果检验失败, 则从池中去除连接并尝试取出另一个
      test-on-borrow: true
      # 是否在归还到池中前进行检验
      test-on-return: false
      # 检测连接是否有效
      validation-query: select 1
      # 配置监控统计
      webStatFilter:
        enabled: true
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: false
        login-username: druid
        login-password: druid
        allow: ""
      web-stat-filter:
        url-pattern: /*
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
      filter:
        stat:
          enabled: true
          # 记录慢SQL
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: false
        wall:
          config:
            multi-statement-allow: true
  redis:
    #数据库索引
    database: 15
    host: 192.168.137.128
    port: 19700
    password: 970049938
    #连接超时时间
    timeout: 5000
  rabbitmq:
    virtual-host: /
    host: 192.168.137.128
    port: 5672
    username: admin
    password: 970049938
  servlet:
    multipart:
      # 文件上传最大50M
      max-file-size: 50MB

logging:
  level:
    com.weiho.scaffold: DEBUG #开启Mybatis Log Plugin sql日志

#Mybatis  - - -  resultMap 不用全写映射，当数据库中的某些字段不匹配时，只用写某些字段
mybatis-plus:
  mapper-locations: classpath*:mapper/**/*.xml # 扫描所有XML的位置
  global-config:
    db-config:
      id-type: auto # 采用数据库的自增模式
    banner: false # 关闭控制台banner输出
  configuration:
    default-enum-type-handler: org.apache.ibatis.type.EnumOrdinalTypeHandler # 处理枚举类
  type-aliases-package: com.weiho.scaffold.system.entity # 别名注解扫描路径

# PageHelper 分页插件
pagehelper:
  helperDialect: mysql
  #分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页，
  #pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询。
  reasonable: true
  #支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，
  #自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。
  supportMethodsArguments: true
  #为了支持startPage(Object params)方法，增加了该参数来配置参数映射，用于从对象中根据属
  #性名取值， 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值，
  #默认值为pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero。
  params: count=countSql

knife4j:
  basic:
    username: lwh
    password: 970049938
    enable: true
  enable: true

scaffold:
  ip: 192.168.137.23
  version: 1.0-SNAPSHOT
  rsa: # 密钥对生成 http://web.chacuo.net/netrsakeypair
    private-key: MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAIb0hAgEMWJd2+a1he7Z0rHAAknNz2Pbzz3zoSTecOqfoNqhHEWzbsD4sVo6xy1FqlUau6wWeDV7IIku9F133XuQfiS96mcE9Ez/Vuqv6O/m1ceNeFz9l2F6Bp/94XjgV0/V/B3QmhvzdMFp3AWMbhJ1LqEknU5b+kVK+6hDFeFPAgMBAAECgYBFI/CgysUiSEPpJwa/IAm5101U0oR1/J9odfERGoVvLukSGYiKjSso4kC6oXJ51z806sVLnRdpDvPUVKINYOOvMARVC8bL7KzG/AiCP057R+fRv5nA6VclRV9RvAs56pfYMwCTX/PlXADkBXzi8kC6pFSvzrz3y1RD1QBe17SqAQJBAOSW5fA38vUqBB2wOA5smECjLwwfmZ8vZjZOlhglVEcyXZreI4m4E7crAu3j4AI29M72j3nAzNZokDD5Rthzpi8CQQCXI0mo8r7Q9YC/YBPcGOY1g7Utgvfsdx58WWE3zDNQm1FshJXQAeR+HbRuqk//6NIZBL1n6ZH9B387hmhO+c7hAkEAmATCZj7PFLwcgKHwpacSmensH+PkBjk/gF5C80vgAHk+Rv/0ImKIugegqxQgpVhm9jyCrjXKA80GF4uv0cMXgQJAEo67qan8sg2i/Fygs6K/CY0dfvQY2wkZTi1vWXmSR3B6w/dXqc3Br5aYJAp3fjWpLnc9hnfQfCAiiD2NqzzTIQJALAEVk2OlhwftnzTJPlLrPuWi4uonwemLGHZklQD6GmSIyyUTmnPlT+IMnFLP9CXR1V9xLc6Mpu9qkDSxoLAYTg==
  jwt:
    # token的请求头的key
    header: Authorization
    # 令牌token的前缀
    token-start-with: Bearer
    # token加密的编码
    secret: k09BQnaF
    # token过期的时间（毫秒）
    token-validity-in-seconds: 7200000
    # 在线用户信息缓存中的Key前缀
    online-key: "Scaffold:OnlineUser:"
    # 登录后用户信息的Key前缀
    detail-key: "Scaffold:UserDetails:"
    # 登录后存储用户Token的Key
    token-key: "Scaffold:UserToken:"
    # 是否允许用户单次登录
    single-login: false
  code:
    # 存储在Redis中验证码的 Key
    code-key: "Scaffold:VerifyCode:"
    # 验证码过期时间 2 Min
    expiration: 2
    # 验证码的类型(使用第三方jar包) https://gitee.com/ele-admin/EasyCaptcha
    # com.wf.captcha.ArithmeticCaptcha - 算数类型(推荐)(默认是算数并且2位算术)
    # com.wf.captcha.GifCaptcha - 动图类型(推荐)
    # com.wf.captcha.SpecCaptcha - png类型(前后端分离用不上，最好使用Base64)
    # com.wf.captcha.ChineseCaptcha - 中文类型(避免乱码,可用性不太高)
    # com.wf.captcha.ChineseGifCaptcha - 中文gif类型(同上)
    type: com.wf.captcha.ArithmeticCaptcha
    # 验证码高度(默认40)
    height: 40
    # 验证码宽度(默认140)
    width: 140
    # 验证码的位数
    len: 3
  swagger:
    # 是否开启Swagger
    enabled: true
    # Swagger标题
    title: Scaffold - 后台API接口文档
    # 描述
    description: 用于实时查看、测试API、提供前端使用
    # 版本
    version: SNAPSHOT
  thread-pool:
    # 核心线程数
    core-pool-size: 20
    # 最大线程数
    max-pool-size: 40
    # 队列大小
    queue-capacity: 999
    # 活跃时间
    keep-alive-seconds: 300
    # 线程名称前缀
    name-prefix: Scaffold-async-thread-
  limit:
    # 是否开启接口限流
    enabled: true
  monitor:
    # 是否开启 WebSocket 系统状态监控
    system-monitor-enabled: true
    # 是否开启实时控制台传输
    logging-monitor-enabled: true
  rabbitmq:
    # 队列名称
    queue-name: ${spring.application.name}.middleware.mail.queue
    # 队列交换机名称
    exchange-name: ${spring.application.name}.mail.exchange
    # 路由Key名称
    routing-key-name: ${spring.application.name}.mail.routing.key
  email:
    # 邮箱验证码的长度
    code-key: "Scaffold:EmailCode:"
    # 邮箱验证码的缓存前缀
    code-length: 6
    # 邮箱验证码的过期时间(min)
    expiration: 5
  resources:
    # 本地资源路径(代理路径)
    local-address-prefix: E:\Graduation_ChouChou\Scaffold-Weiho\resources\
    # 头像本地地址前缀
    avatar-local-address-prefix: ${scaffold.resources.local-address-prefix}avatar\
    # 头像服务器地址前缀
    avatar-server-address-prefix: http://${scaffold.ip}:${server.port}/local/avatar/
    # 文件上传最大的大小(MB)
    storage-upload-max-size: 20
    # 存储本地地址前缀
    storage-local-address-prefix: ${scaffold.resources.local-address-prefix}storage\
    # 存储服务器地址前缀
    storage-server-address-prefix: http://${scaffold.ip}:${server.port}/local/storage/